
; PICBASIC PRO(TM) Compiler 3.0.6.4, (c) 1998, 2012 microEngineering Labs, Inc. All Rights Reserved. 
MPASMWIN_USED			EQU	1

#define	PBP_PATH	C:\PBP3\




        NOLIST
    ifdef PM_USED
        LIST
        include 'M12F675.INC'	; PM header
        XALL
        NOLIST
    else
        LIST
        LIST p = 12F675, r = dec, w = -302
        INCLUDE "P12F675.INC"	; MPASM  Header
        NOLIST
    endif
        LIST


PBP_HARDWAREDEF  macro
  endm


   __config _INTRC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_OFF & _MCLRE_OFF & _BODEN_OFF & _CP_OFF & _CPD_OFF



; Define statements.
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00059	Define OSCCAL_1K 1      ' PIC12F675, Calibrate internal oscillator
#define		OSCCAL_1K		 1      
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00060	DEFINE CHAR_PACING 2000      ' spacing between serial characters (us)
#define		CHAR_PACING		 2000      

RAM_START       		EQU	00020h
RAM_END         		EQU	0005Fh
RAM_BANKS       		EQU	00001h
BANK0_START     		EQU	00020h
BANK0_END       		EQU	0005Fh
EEPROM_START    		EQU	02100h
EEPROM_END      		EQU	0217Fh

; C:\PBP3\PBPPIC14.RAM     	00012	A00020	R0      VAR     WORD BANK0 SYSTEM       ' System Register
R0              		EQU	RAM_START + 000h
; C:\PBP3\PBPPIC14.RAM     	00013	A00022	R1      VAR     WORD BANK0 SYSTEM       ' System Register
R1              		EQU	RAM_START + 002h
; C:\PBP3\PBPPIC14.RAM     	00014	A00024	R2      VAR     WORD BANK0 SYSTEM       ' System Register
R2              		EQU	RAM_START + 004h
; C:\PBP3\PBPPIC14.RAM     	00015	A00026	R3      VAR     WORD BANK0 SYSTEM       ' System Register
R3              		EQU	RAM_START + 006h
; C:\PBP3\PBPPIC14.RAM     	00016	A00028	R4      VAR     WORD BANK0 SYSTEM       ' System Register
R4              		EQU	RAM_START + 008h
; C:\PBP3\PBPPIC14.RAM     	00017	A0002A	R5      VAR     WORD BANK0 SYSTEM       ' System Register
R5              		EQU	RAM_START + 00Ah
; C:\PBP3\PBPPIC14.RAM     	00018	A0002C	R6      VAR     WORD BANK0 SYSTEM       ' System Register
R6              		EQU	RAM_START + 00Ch
; C:\PBP3\PBPPIC14.RAM     	00019	A0002E	R7      VAR     WORD BANK0 SYSTEM       ' System Register
R7              		EQU	RAM_START + 00Eh
; C:\PBP3\PBPPIC14.RAM     	00020	A00030	R8      VAR     WORD BANK0 SYSTEM       ' System Register
R8              		EQU	RAM_START + 010h
; C:\PBP3\PBPPIC14.RAM     	00026	A00032	FLAGS   VAR     BYTE BANK0 SYSTEM       ' Static flags
FLAGS           		EQU	RAM_START + 012h
; C:\PBP3\PBPPIC14.RAM     	00025	A00033	GOP     VAR     BYTE BANK0 SYSTEM       ' Gen Op Parameter
GOP             		EQU	RAM_START + 013h
; C:\PBP3\PBPPIC14.RAM     	00022	A00034	RM1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Mask
RM1             		EQU	RAM_START + 014h
; C:\PBP3\PBPPIC14.RAM     	00024	A00035	RM2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Mask
RM2             		EQU	RAM_START + 015h
; C:\PBP3\PBPPIC14.RAM     	00021	A00036	RR1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Register
RR1             		EQU	RAM_START + 016h
; C:\PBP3\PBPPIC14.RAM     	00023	A00037	RR2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Register
RR2             		EQU	RAM_START + 017h
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00072	A00038	tempword    VAR word
_tempword        		EQU	RAM_START + 018h
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00071	A0003A	timer1start VAR word     '16 bit Timer 1 starting value
_timer1start     		EQU	RAM_START + 01Ah
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00153	A0003C	I var byte SYSTEM          ' loop counter
I               		EQU	RAM_START + 01Ch
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00001	A0003D	' OSCadj
PB01            		EQU	RAM_START + 01Dh
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00068	A0003E	Ph var byte SYSTEM      ' phase lag ("20" gives ~60us)
Ph              		EQU	RAM_START + 01Eh
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00077	A0003F	S0 var byte
_S0              		EQU	RAM_START + 01Fh
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00078	A00040	S1 var byte
_S1              		EQU	RAM_START + 020h
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00079	A00041	S2 var byte
_S2              		EQU	RAM_START + 021h
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00080	A00042	S3 var byte
_S3              		EQU	RAM_START + 022h
; C:\PBP3\DEVICES\PIC12F675.PBPINC	00126	PORTL   VAR     GPIO
_PORTL           		EQU	 GPIO
; C:\PBP3\DEVICES\PIC12F675.PBPINC	00127	PORTH   VAR     GPIO
_PORTH           		EQU	 GPIO
; C:\PBP3\DEVICES\PIC12F675.PBPINC	00128	TRISL   VAR     TRISIO
_TRISL           		EQU	 TRISIO
; C:\PBP3\DEVICES\PIC12F675.PBPINC	00129	TRISH   VAR     TRISIO
_TRISH           		EQU	 TRISIO
_timer1start??BYTE0		EQU	_timer1start
_timer1start??BYTE1		EQU	_timer1start + 001h
_tempword??BYTE0 		EQU	_tempword
_tempword??BYTE1 		EQU	_tempword + 001h
#define _LED             	_GPIO??1
#define _SHDN            	_GPIO??3
#define _SO              	_GPIO??4
#define _sig             	 PB01, 000h
#define _TRISIO??1       	 TRISIO, 001h
#define _GPIO??1         	 GPIO, 001h
#define _TRISIO??3       	 TRISIO, 003h
#define _GPIO??3         	 GPIO, 003h
#define _TRISIO??4       	 TRISIO, 004h
#define _GPIO??4         	 GPIO, 004h
#define _TRISIO??0       	 TRISIO, 000h
#define _TRISIO??2       	 TRISIO, 002h
#define _TRISIO??5       	 TRISIO, 005h
#define _T1CON??3        	 T1CON, 003h
#define _T1CON??1        	 T1CON, 001h
#define _T1CON??2        	 T1CON, 002h
#define _T1CON??0        	 T1CON, 000h
#define _T1CON??4        	 T1CON, 004h
#define _T1CON??5        	 T1CON, 005h
#define _PIR1??0         	 PIR1, 000h
#define _INTCON??7       	 INTCON, 007h
#define _INTCON??6       	 INTCON, 006h
#define _PIE1??0         	 PIE1, 000h
#define _INTCON??4       	 INTCON, 004h

; Constants.
_T2400           		EQU	00000h
_T1200           		EQU	00001h
_T9600           		EQU	00002h
_T300            		EQU	00003h
_N2400           		EQU	00004h
_N1200           		EQU	00005h
_N9600           		EQU	00006h
_N300            		EQU	00007h
_OT2400          		EQU	00008h
_OT1200          		EQU	00009h
_OT9600          		EQU	0000Ah
_OT300           		EQU	0000Bh
_ON2400          		EQU	0000Ch
_ON1200          		EQU	0000Dh
_ON9600          		EQU	0000Eh
_ON300           		EQU	0000Fh
_MSBPRE          		EQU	00000h
_LSBPRE          		EQU	00001h
_MSBPOST         		EQU	00002h
_LSBPOST         		EQU	00003h
_LSBFIRST        		EQU	00000h
_MSBFIRST        		EQU	00001h
_CLS             		EQU	00000h
_HOME            		EQU	00001h
_BELL            		EQU	00007h
_BKSP            		EQU	00008h
_TAB             		EQU	00009h
_CR              		EQU	0000Dh
_UnitOn          		EQU	00012h
_UnitOff         		EQU	0001Ah
_UnitsOff        		EQU	0001Ch
_LightsOn        		EQU	00014h
_LightsOff       		EQU	00010h
_Dim             		EQU	0001Eh
_Bright          		EQU	00016h
_stopstartinterval		EQU	0000Eh
_period          		EQU	002CAh
	INCLUDE	"OSCADJB5.MAC"
	INCLUDE	"C:\PBP3\PBPPIC14.LIB"


; C:\PBP3\DEVICES\PIC12F675.PBPINC	00036	#HEADER
; C:\PBP3\DEVICES\PIC12F675.PBPINC	00061	#CONFIG
; C:\PBP3\DEVICES\PIC12F675.PBPINC	00119	BANK0   $0020, $005F
; C:\PBP3\DEVICES\PIC12F675.PBPINC	00121	EEPROM  $2100, $217F
; C:\PBP3\DEVICES\PIC12F675.PBPINC	00123	    #ERROR "-n option (PBPL) is not supported for this device."
; C:\PBP3\DEVICES\PIC12F675.PBPINC	00124	#ENDIF
; C:\PBP3\DEVICES\PIC12F675.PBPINC	00125	LIBRARY "PBPPIC14"

; C:\PBP3\DEVICES\PIC12F675.PBPINC	00130	include "PBPPIC14.RAM"
; C:\PBP3\DEVICES\PIC12F675.PBPINC	00134	#HEADER
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00054	#CONFIG

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00058	INCLUDE "modedefs.bas"
; C:\PBP3\MODEDEFS.BAS     	00014	Symbol T2400  = 0       ' Driven True
; C:\PBP3\MODEDEFS.BAS     	00015	Symbol T1200  = 1       ' Driven True
; C:\PBP3\MODEDEFS.BAS     	00016	Symbol T9600  = 2       ' Driven True
; C:\PBP3\MODEDEFS.BAS     	00017	Symbol T300   = 3       ' Driven True
; C:\PBP3\MODEDEFS.BAS     	00019	Symbol N2400  = 4       ' Driven Inverted
; C:\PBP3\MODEDEFS.BAS     	00020	Symbol N1200  = 5       ' Driven Inverted
; C:\PBP3\MODEDEFS.BAS     	00021	Symbol N9600  = 6       ' Driven Inverted
; C:\PBP3\MODEDEFS.BAS     	00022	Symbol N300   = 7       ' Driven Inverted
; C:\PBP3\MODEDEFS.BAS     	00024	Symbol OT2400 = 8       ' Open True
; C:\PBP3\MODEDEFS.BAS     	00025	Symbol OT1200 = 9       ' Open True
; C:\PBP3\MODEDEFS.BAS     	00026	Symbol OT9600 = 10      ' Open True
; C:\PBP3\MODEDEFS.BAS     	00027	Symbol OT300  = 11      ' Open True
; C:\PBP3\MODEDEFS.BAS     	00029	Symbol ON2400 = 12      ' Open Inverted
; C:\PBP3\MODEDEFS.BAS     	00030	Symbol ON1200 = 13      ' Open Inverted
; C:\PBP3\MODEDEFS.BAS     	00031	Symbol ON9600 = 14      ' Open Inverted
; C:\PBP3\MODEDEFS.BAS     	00032	Symbol ON300  = 15      ' Open Inverted
; C:\PBP3\MODEDEFS.BAS     	00036	Symbol MSBPRE = 0       ' MSB first, sample before clock
; C:\PBP3\MODEDEFS.BAS     	00037	Symbol LSBPRE = 1       ' LSB first, sample before clock
; C:\PBP3\MODEDEFS.BAS     	00038	Symbol MSBPOST = 2      ' MSB first, sample after clock
; C:\PBP3\MODEDEFS.BAS     	00039	Symbol LSBPOST = 3      ' LSB first, sample after clock
; C:\PBP3\MODEDEFS.BAS     	00042	Symbol LSBFIRST = 0     ' LSB first
; C:\PBP3\MODEDEFS.BAS     	00043	Symbol MSBFIRST = 1     ' MSB first
; C:\PBP3\MODEDEFS.BAS     	00047	Symbol CLS = 0
; C:\PBP3\MODEDEFS.BAS     	00048	Symbol HOME = 1
; C:\PBP3\MODEDEFS.BAS     	00049	Symbol BELL = 7
; C:\PBP3\MODEDEFS.BAS     	00050	Symbol BKSP = 8
; C:\PBP3\MODEDEFS.BAS     	00051	Symbol TAB = 9
; C:\PBP3\MODEDEFS.BAS     	00052	Symbol CR = 13
; C:\PBP3\MODEDEFS.BAS     	00056	Symbol UnitOn = %10010
; C:\PBP3\MODEDEFS.BAS     	00057	Symbol UnitOff = %11010
; C:\PBP3\MODEDEFS.BAS     	00058	Symbol UnitsOff = %11100
; C:\PBP3\MODEDEFS.BAS     	00059	Symbol LightsOn = %10100
; C:\PBP3\MODEDEFS.BAS     	00060	Symbol LightsOff = %10000
; C:\PBP3\MODEDEFS.BAS     	00061	Symbol Dim = %11110
; C:\PBP3\MODEDEFS.BAS     	00062	Symbol Bright = %10110
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00059	Define OSCCAL_1K 1      ' PIC12F675, Calibrate internal oscillator
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00060	DEFINE CHAR_PACING 2000      ' spacing between serial characters (us)

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00064	ANSEL = 0     ' Set all digital
	MOVE?CB	000h, ANSEL

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00065	CMCON = 7     ' Analog comparators off
	MOVE?CB	007h, CMCON

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00087	TRISIO.1=0              ' make GP1 an output
	MOVE?CT	000h, _TRISIO??1

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00090	TRISIO.3=1              ' make GP3 an input (GP3 can only be an input anyway)
	MOVE?CT	001h, _TRISIO??3

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00093	TRISIO.4=0
	MOVE?CT	000h, _TRISIO??4

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00096	TRISIO.0=0              ' GP0 (pin5)
	MOVE?CT	000h, _TRISIO??0

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00097	TRISIO.1=0              ' make GP1 an output (pin6)
	MOVE?CT	000h, _TRISIO??1

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00098	TRISIO.2=0              ' GP2 (pin7)
	MOVE?CT	000h, _TRISIO??2
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00107	stopstartinterval CON 14                  'approx duration of compiled code between stopping and restarting timer 1
; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00111	period            CON 714           'simulation check 716

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00116	timer1start = $FFFF - (period/2) + stopstartinterval + 1       '2^16 - (period/2) + stopstartinterval
	MOVE?CW	0FEA9h, _timer1start

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00117	Ph=32                                                          'SYNC delay about 99uS  3*(Ph+1)
	MOVE?CB	020h, Ph

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00120	pause 100               ' gather
	PAUSE?C	064h

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00124	timing:         '''''''''''''''''''''''''''' timing part

	LABEL?L	_timing	

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00126	TRISIO.1=0              ' make GP1 an output (pin6)
	MOVE?CT	000h, _TRISIO??1

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00127	TRISIO.5=0              ' make GP5 an output (pin2)
	MOVE?CT	000h, _TRISIO??5

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00132	T1CON.3=0            ' disable (external) LP oscillator
	MOVE?CT	000h, _T1CON??3

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00133	T1CON.1=0            ' don't use external clock    TMR1CS
	MOVE?CT	000h, _T1CON??1

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00134	T1CON.2=1            ' don't synchronise with external clock 
	MOVE?CT	001h, _T1CON??2

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00136	T1CON.0=0            'disable timer1
	MOVE?CT	000h, _T1CON??0

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00138	T1CON.4=0
	MOVE?CT	000h, _T1CON??4

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00139	T1CON.5=0           ' set timer1 prescaler to 1:1
	MOVE?CT	000h, _T1CON??5

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00142	TMR1L = timer1start.byte0           
	MOVE?BB	_timer1start??BYTE0, TMR1L

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00143	TMR1H = timer1start.byte1
	MOVE?BB	_timer1start??BYTE1, TMR1H

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00144	PIR1.0 = 0    ' Reset timer1 interrupt flag    
	MOVE?CT	000h, _PIR1??0

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00145	T1CON.0=1            ' enable timer1
	MOVE?CT	001h, _T1CON??0

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00147	INTCON.7=1       ' enable all interrupts
	MOVE?CT	001h, _INTCON??7

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00148	INTCON.6=1       ' enable all peripheral interrupts
	MOVE?CT	001h, _INTCON??6

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00149	PIE1.0=1          'enable timer1 interrupt
	MOVE?CT	001h, _PIE1??0

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00151	INTCON.4=0        ' disable this interrupt
	MOVE?CT	000h, _INTCON??4

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00156	On Interrupt Goto inthand
	ONINT?LL	_inthand, L00001

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00160	S0=7
	ICALL?L	L00001
	MOVE?CB	007h, _S0

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00161	S1=$27
	ICALL?L	L00001
	MOVE?CB	027h, _S1

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00162	S2=32
	ICALL?L	L00001
	MOVE?CB	020h, _S2

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00163	S3=0
	ICALL?L	L00001
	MOVE?CB	000h, _S3

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00168	mainloop:

	LABEL?L	_mainloop	

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00170	If shdn=1 then ' normal operation, pull up to supply holds this
	ICALL?L	L00001
	CMPNE?TCL	_SHDN, 001h, L00002

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00172	S0=7
	ICALL?L	L00001
	MOVE?CB	007h, _S0

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00173	S1=$27
	ICALL?L	L00001
	MOVE?CB	027h, _S1

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00174	S2=32
	ICALL?L	L00001
	MOVE?CB	020h, _S2

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00175	S3=0
	ICALL?L	L00001
	MOVE?CB	000h, _S3

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00181	endif
	ICALL?L	L00001
	LABEL?L	L00002	

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00185	Goto mainloop  
	ICALL?L	L00001
	GOTO?L	_mainloop

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00190	DISABLE INTERRUPT
	IDISABLE?	

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00191	inthand:

	LABEL?L	_inthand	

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00193	   T1CON.0=0                                 ' turn off timer1
	MOVE?CT	000h, _T1CON??0

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00194	   tempword.byte0 = TMR1L                    'timer1 will have run on since overflow so take account of starting value
	MOVE?BB	TMR1L, _tempword??BYTE0

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00195	   tempword.byte1 = TMR1H
	MOVE?BB	TMR1H, _tempword??BYTE1

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00196	   tempword = tempword + timer1start
	ADD?WWW	_tempword, _timer1start, _tempword

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00197	   TMR1L = tempword.byte0
	MOVE?BB	_tempword??BYTE0, TMR1L

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00198	   TMR1H = tempword.byte1
	MOVE?BB	_tempword??BYTE1, TMR1H

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00199	   T1CON.0=1         ' turn on timer1        OFF to ON takes around 14 compiled instruction cycles
	MOVE?CT	001h, _T1CON??0

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00201	sig = not (sig)   'flip output line
	LNOT?TT	_sig, _sig

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00219	if sig=1 then
	CMPNE?TCL	_sig, 001h, L00004

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00222	GPIO=S0
	MOVE?BB	_S0, GPIO

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00225	I=Ph
	MOVE?BB	Ph, I

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00226	ASM

	ASM?

INNER1
     DECFSZ I,F   ; I=I-1. IF I=0 skip next instruction
     GOTO INNER1  ; Loop until I=0


	ENDASM?


; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00235	    GPIO=S1
	MOVE?BB	_S1, GPIO

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00236	    else
	GOTO?L	L00005
	LABEL?L	L00004	

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00240	    GPIO=S2
	MOVE?BB	_S2, GPIO

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00243	I=Ph
	MOVE?BB	Ph, I

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00244	ASM

	ASM?

INNER2
     DECFSZ I,F   ; I=I-1. IF I=0 skip next instruction
     GOTO INNER2  ; Loop until I=0


	ENDASM?


; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00251	    GPIO=S3
	MOVE?BB	_S3, GPIO

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00252	    endif
	LABEL?L	L00005	

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00254	PIR1.0 = 0    ' Reset timer1 interrupt flag   
	MOVE?CT	000h, _PIR1??0

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00256	Resume
	RESUME?	

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00257	ENABLE INTERRUPT
	IENABLE?	

; Z:\PHD\WC3_RADIOSONDE\DEVELOPEMENT\OSCADJB5.PBP	00260	End
	ICALL?L	L00001
	END?	

	END
